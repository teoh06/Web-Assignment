@inject DB db
@model List<WebApplication2.Models.FeaturedMenuItemVM>
@using System.Globalization;

@{
    ViewBag.Title = "Welcome to QuickBite";
    WebApplication2.Models.Member member = null;
    List<WebApplication2.Models.MenuItem> topSell = db.MenuItems
        .Where(m => !m.IsDeleted && m.IsActive) // Exclude deleted and inactive items
        .OrderByDescending(m => db.CartItems.Where(c => c.MenuItemId == m.MenuItemId).Count())
        .Take(5)
        .ToList();
    List<WebApplication2.Models.MenuItem> favorites = new List<WebApplication2.Models.MenuItem>();
    if (User.IsInRole("Member"))
    {
        member = db.Members.Find(User.Identity!.Name);
        var favIds = db.MenuItemFavorites.Where(f => f.MemberEmail == User.Identity.Name).Select(f => f.MenuItemId).ToList();
        favorites = db.MenuItems.Where(m => favIds.Contains(m.MenuItemId) && !m.IsDeleted && m.IsActive).ToList();
    }
}
<div class="hero-container">
    <div class="welcome-banner">
        @if (User.IsInRole("Member") && member != null)
        {
            <h2 class="nice-word">Welcome back, @member.Name</h2>
        }
        else
        {
            <h2 class="nice-word">Welcome to QuickBite</h2>
        }
        <p class="tagline">Delicious meals, delivered with speed</p>
        
        <div class="cta-container">
            @if (User.IsInRole("Member"))
            {
                <a href="/MenuItem" class="cta-button">Browse Menu</a>
            }
            else if (User.IsInRole("Admin"))
            {
                <a href="/MenuItem" class="cta-button">Manage Menu</a>
            }
            else
            {
                <a href="/MenuItem" class="cta-button">Explore Our Menu</a>
            }
        </div>
    </div>
</div>

<div class="content-container">
    <!-- Featured Menu Section -->
    <section class="menu-section featured-section">
        <div class="section-header">
            <h2>Featured Menu</h2>
            <p class="section-description">Our chef's special selections just for you</p>
        </div>
        
        <div class="card-grid">
            @foreach (var item in Model)
            {
                <a href="/MenuItem/Details/@item.MenuItemId" class="menu-card">
                    <div class="card-image-container">
                        <img src="@item.Image" alt="@item.Name" class="card-image">
                        <div class="card-badge" style="margin: 10px auto;">Featured</div>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">@item.Name</h3>
                        <p class="card-description">@(item.Description?.Length > 60 ? item.Description.Substring(0, 60) + "..." : item.Description)</p>
                        <div class="card-footer">
                            <span class="card-price">@item.Price.ToString("C", new CultureInfo("en-MY"))</span>
                        </div>
                    </div>
                </a>
            }
        </div>
    </section>

    <!-- Top Selling Items Section -->
    <section class="menu-section bestsellers-section">
        <div class="section-header">
            <h2>Most Popular</h2>
            <p class="section-description">Our customers' favorite choices</p>
        </div>
        
        <div class="card-grid">
            @foreach (var item in topSell)
            {
                <a href="/MenuItem/Details/@item.MenuItemId" class="menu-card">
                    <div class="card-image-container">
                        <img src="/images/@(item.PhotoURL ?? "default.jpg")" alt="@item.Name" class="card-image">
                        <div class="card-badge bestseller" style="margin: 10px auto;">Top Seller</div>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">@item.Name</h3>
                        <p class="card-description">@(item.Description?.Length > 60 ? item.Description.Substring(0, 60) + "..." : item.Description)</p>
                        <div class="card-footer">
                            <span class="card-price">@item.Price.ToString("C", new CultureInfo("en-MY"))</span>
                        </div>
                    </div>
                </a>
            }
        </div>
    </section>

    <!-- Favorites Section (Only for logged-in members) -->
    @if (User.IsInRole("Member") && favorites.Any())
    {
        <section class="menu-section favorites-section">
            <div class="section-header">
                <h2>Your Favorites</h2>
                <p class="section-description">Quick access to your preferred dishes</p>
            </div>
            
            <div class="card-grid">
                @foreach (var item in favorites)
                {
                    <a href="/MenuItem/Details/@item.MenuItemId" class="menu-card">
                        <div class="card-image-container">
                            <img src="/images/@(item.PhotoURL ?? "default.jpg")" alt="@item.Name" class="card-image">
                            <div class="card-badge favorite">Favorite</div>
                        </div>
                        <div class="card-content">
                            <h3 class="card-title">@item.Name</h3>
                            <p class="card-description">@(item.Description?.Length > 60 ? item.Description.Substring(0, 60) + "..." : item.Description)</p>
                            <div class="card-footer">
                                <span class="card-price">@item.Price.ToString("C", new CultureInfo("en-MY"))</span>
                            </div>
                        </div>
                    </a>
                }
            </div>
        </section>
    }
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const word = document.querySelector('.nice-word');

        // Only add event listener if element exists
        if (word) {
            word.addEventListener('click', () => {
                // Add the rainbow class to display rainbow colors
                if (!word.classList.contains('rainbow')) {
                    word.classList.add('rainbow');
                }
                // Optional: trigger pop-out effect
                word.classList.add('pop-out');
                setTimeout(() => word.classList.remove('pop-out'), 300);
            });
        }
    });
</script>