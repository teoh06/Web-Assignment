@model WebApplication2.Models.ReceiptVM
@using WebApplication2.Models;
@using System.Globalization;
@{
    ViewBag.Title = "Order Receipt";
    bool isEmailReceipt = ViewData["IsEmailReceipt"] != null && (bool)ViewData["IsEmailReceipt"];
}

@if (!isEmailReceipt)
{
    <style>
        .receipt-container {
            max-width: 800px;
            margin: 40px auto;
            background: linear-gradient(135deg, var(--bg-accent), var(--bg-secondary));
            border-radius: 18px;
            box-shadow: 0 4px 24px var(--shadow-color);
            padding: 32px;
            color: var(--text-primary);
        }

        .receipt-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: 0 2px 8px var(--shadow-color);
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .receipt-header {
            background: linear-gradient(135deg, var(--primary-brand), var(--secondary-brand));
            padding: 2rem;
            text-align: center;
            color: var(--text-light);
            position: relative;
            overflow: hidden;
        }

        .receipt-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ffffff' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E");
            opacity: 0.5;
        }

        .receipt-title {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            font-family: "Victor Mono", monospace;
            position: relative;
            z-index: 1;
        }

        .receipt-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            position: relative;
            z-index: 1;
        }

        .receipt-body {
            padding: 2rem;
            background: var(--card-bg);
            color: var(--text-primary);
        }

        .info-section {
            background: var(--bg-secondary);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 8px var(--shadow-color);
        }

        .section-title {
            color: var(--primary-brand);
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid var(--border-lighter);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .info-table {
            display: grid;
            gap: 0.8rem;
        }

        .info-row {
            display: grid;
            grid-template-columns: 140px 1fr;
            gap: 1rem;
            align-items: baseline;
        }

        .info-label {
            color: var(--text-secondary);
            font-weight: 500;
        }

        .info-value {
            color: var(--text-primary);
            font-weight: 500;
        }

        .status-badge {
            display: inline-block;
            padding: 0.4rem 1rem;
            border-radius: 2rem;
            font-size: 0.9rem;
            font-weight: 500;
            background: var(--accent-green);
            color: var(--text-light);
        }

        .receipt-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 1rem;
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid var(--border-lighter);
            background: var(--card-bg);
        }

        .receipt-table th {
            background: var(--bg-secondary);
            color: var(--text-primary);
            font-weight: 600;
            text-align: left;
            padding: 1rem;
            border-bottom: 2px solid var(--border-lighter);
        }

        .receipt-table td {
            padding: 1rem;
            border-bottom: 1px solid var(--border-lighter);
            color: var(--text-primary);
        }

        .receipt-table tr:last-child td {
            border-bottom: none;
        }

        .item-name {
            font-weight: 600;
            color: var(--text-primary);
        }

        .personalizations-label {
            font-size: 0.9rem;
            color: var(--text-secondary);
            margin-top: 0.5rem;
        }

        .personalizations-list {
            list-style: none;
            padding-left: 0;
            margin: 0.5rem 0;
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .receipt-footer {
            text-align: center;
            padding: 2rem;
            background: var(--bg-secondary);
            color: var(--text-secondary);
            border-top: 1px solid var(--border-lighter);
        }

        .total-row {
            background: var(--bg-secondary);
            font-weight: 700;
        }

        .total-amount {
            color: var(--primary-brand);
            font-size: 1.1rem;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 1.5rem;
        }

        .action-buttons .btn {
            min-width: 140px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            border-radius: 2rem;
            transition: all 0.3s ease;
        }

        @@media print {
            .receipt-container {
                margin: 0;
                padding: 0;
                box-shadow: none;
                background: white;
            }

            .receipt-card {
                box-shadow: none;
                border: none;
            }

            .receipt-header {
                color: black;
                background: white;
                border-bottom: 2px solid #eee;
            }

            .action-buttons {
                display: none;
            }
        }
    </style>
}
else
{
    <style>
        /* Inline critical styles for email clients */
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, Helvetica, sans-serif;
            line-height: 1.5;
            color: #333333;
        }
        
        table {
            border-collapse: collapse;
            mso-table-lspace: 0pt;
            mso-table-rspace: 0pt;
        }
        
        td {
            vertical-align: top;
            padding: 8px;
        }
        
        .email-receipt-container {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .email-section {
            margin-bottom: 20px;
            padding: 15px;
            background-color: #ffffff;
            border: 1px solid #dee2e6;
        }
        
        .email-receipt-header {
            text-align: center;
            padding: 20px;
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }
        
        .email-order-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
            border: 1px solid #dee2e6;
        }
        
        .email-order-table th, .email-order-table td {
            border: 1px solid #dee2e6;
            padding: 10px;
            text-align: left;
        }
        
        .email-order-table th {
            background-color: #f8f9fa;
            font-weight: bold;
        }
    </style>
}

<div class="@(isEmailReceipt ? "email-receipt-container" : "receipt-container")">
    <div class="@(isEmailReceipt ? "email-section" : "receipt-card")">
        <div class="@(isEmailReceipt ? "email-receipt-header" : "receipt-header")">
            <h2 class="receipt-title">Order Receipt</h2>
            <p class="receipt-subtitle">Thank you for your purchase!</p>
        </div>
        <div class="@(isEmailReceipt ? "email-receipt-body" : "receipt-body")" style="@(isEmailReceipt ? "padding: 20px;" : "")">
            @if (!isEmailReceipt)
            {
                <form id="antiforgery-receipt" method="post">
                    @Html.AntiForgeryToken()
                </form>
            }
            <!-- Order Information -->
            <div class="row g-4">
                <div class="col-md-6">
                    <div class="info-section">
                        <h5 class="@(isEmailReceipt ? "email-section-title" : "section-title")" style="@(isEmailReceipt ? "color: #0d6efd; font-size: 18px; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;" : "")">Order Information</h5>
                        <div class="info-table">
                            <div class="info-row">
                                <div class="info-label">Order Number:</div>
                                <div class="info-value fw-bold">#@Model.OrderId.ToString().PadLeft(6, '0')</div>
                            </div>
                            <div class="info-row">
                                <div class="info-label">Order Date:</div>
                                <div class="info-value">@Model.Date.ToString("dd MMM yyyy, HH:mm")</div>
                            </div>
                            <div class="info-row">
                                <div class="info-label">Order Status:</div>
                                <div class="info-value"><span class="status-badge">@Model.Status</span></div>
                            </div>
                            <div class="info-row">
                                <div class="info-label">Delivery Option:</div>
                                <div class="info-value fw-bold">@Model.DeliveryOption</div>
                            </div>
                            @if (!string.Equals(Model.DeliveryOption, "Pickup", StringComparison.OrdinalIgnoreCase))
                            {
                                <div class="info-row">
                                    <div class="info-label">Delivery Address:</div>
                                    <div class="info-value fw-bold">@Model.DeliveryAddress</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Customer Information -->
                <div class="col-md-6">
                    <div class="info-section">
                        <h5 class="@(isEmailReceipt ? "email-section-title" : "section-title")" style="@(isEmailReceipt ? "color: #0d6efd; font-size: 18px; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;" : "")">Customer Information</h5>
                        <div class="info-table">
                            <div class="info-row">
                                <div class="info-label">Customer Email:</div>
                                <div class="info-value">@Model.MemberEmail</div>
                            </div>
                            <div class="info-row">
                                <div class="info-label">Payment Method:</div>
                                <div class="info-value fw-bold">@Model.PaymentMethod</div>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                            {
                                <div class="info-row">
                                    <div class="info-label">Phone Number:</div>
                                    <div class="info-value">@Model.PhoneNumber</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Delivery Instructions if any -->
            @if (!string.IsNullOrEmpty(Model.DeliveryInstructions))
            {
                <div class="info-section mt-4">
                    <h5 class="section-title">Delivery Instructions</h5>
                    <div class="instructions-box">@Model.DeliveryInstructions</div>
                </div>
            }

            <!-- Order Items -->
            <div class="info-section mt-4">
                <h5 class="@(isEmailReceipt ? "email-section-title" : "section-title")" style="@(isEmailReceipt ? "color: #0d6efd; font-size: 18px; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;" : "")">Order Details</h5>
                <div class="@(isEmailReceipt ? "" : "table-responsive")">
                    <table class="@(isEmailReceipt ? "email-order-table" : "table receipt-table")" style="@(isEmailReceipt ? "width: 100%; border-collapse: collapse; border: 1px solid #dee2e6;" : "")">
                        <thead>
                            <tr>
                                <th style="@(isEmailReceipt ? "background-color: #f8f9fa; border: 1px solid #dee2e6; padding: 10px; text-align: left; font-weight: bold;" : "")">Item</th>
                                <th style="@(isEmailReceipt ? "background-color: #f8f9fa; border: 1px solid #dee2e6; padding: 10px; text-align: left; font-weight: bold;" : "")">Price</th>
                                <th style="@(isEmailReceipt ? "background-color: #f8f9fa; border: 1px solid #dee2e6; padding: 10px; text-align: left; font-weight: bold;" : "")">Quantity</th>
                                <th style="@(isEmailReceipt ? "background-color: #f8f9fa; border: 1px solid #dee2e6; padding: 10px; text-align: left; font-weight: bold;" : "")">Subtotal</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr data-menu-item-id="@item.MenuItemId">
                                    <td style="@(isEmailReceipt ? "border: 1px solid #dee2e6; padding: 10px; vertical-align: top;" : "")">
                                        <div class="@(isEmailReceipt ? "email-item-name" : "item-name")" style="@(isEmailReceipt ? "font-weight: bold;" : "")">@item.Name</div>
                                        @if (!string.IsNullOrEmpty(item.SelectedPersonalizations))
                                        {
                                            var personalizations = item.SelectedPersonalizations.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
                                            if (personalizations.Length > 1)
                                            {
                                                <div class="personalizations-label">Personalizations:</div>
                                                <ul class="personalizations-list">
                                                    @foreach (var personalization in personalizations)
                                                    {
                                                        <li>@personalization.Trim()</li>
                                                    }
                                                </ul>
                                            }
                                            else
                                            {
                                                <div class="personalizations-label">Personalization: @item.SelectedPersonalizations</div>
                                            }
                                        }
                                    </td>
                                    <td style="@(isEmailReceipt ? "border: 1px solid #dee2e6; padding: 10px; vertical-align: top;" : "")">@item.Price.ToString("C", new CultureInfo("en-MY"))</td>
                                    <td style="@(isEmailReceipt ? "border: 1px solid #dee2e6; padding: 10px; vertical-align: top;" : "")">@item.Quantity</td>
                                    <td class="@(isEmailReceipt ? "email-subtotal" : "subtotal")" style="@(isEmailReceipt ? "border: 1px solid #dee2e6; padding: 10px; vertical-align: top;" : "")">@((item.Price * item.Quantity).ToString("C", new CultureInfo("en-MY")))</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr class="@(isEmailReceipt ? "email-total-row" : "total-row")" style="@(isEmailReceipt ? "background-color: #f8f9fa;" : "")">
                                <td colspan="3" style="@(isEmailReceipt ? "border: 1px solid #dee2e6; padding: 10px; font-weight: bold;" : "")"><strong>Total</strong></td>
                                <td class="@(isEmailReceipt ? "email-total-amount" : "total-amount")" style="@(isEmailReceipt ? "border: 1px solid #dee2e6; padding: 10px; color: #0d6efd; font-weight: bold;" : "")"><strong>@Model.Total.ToString("C", new CultureInfo("en-MY"))</strong></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>

            @if (!isEmailReceipt && User.IsInRole("Member"))
            {
                <!-- Rate Your Purchase -->
                <div class="info-section mt-4">
                    <h5 class="section-title"><i class="fas fa-star text-warning me-2"></i>Rate Your Purchase</h5>
                    <div class="row g-3">
                        @foreach (var item in Model.Items)
                        {
                            <div class="col-md-6">
                                <div class="card h-100" style="border:1px solid var(--border-lighter);">
                                    <div class="card-body d-flex align-items-center justify-content-between">
                                        <div>
                                            <div class="fw-bold">@item.Name</div>
                                            <div class="text-muted small">Tap to rate</div>
                                        </div>
                                        <div class="receipt-stars" data-menu-item-id="@item.MenuItemId">
                                            <span class="star" data-value="1">☆</span>
                                            <span class="star" data-value="2">☆</span>
                                            <span class="star" data-value="3">☆</span>
                                            <span class="star" data-value="4">☆</span>
                                            <span class="star" data-value="5">☆</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Payment Information for Card Payments -->
            @if (Model.PaymentMethod == "Card" && !string.IsNullOrEmpty(Model.CardNumber))
            {
                <div class="@(isEmailReceipt ? "email-section" : "info-section mt-4")" style="@(isEmailReceipt ? "margin-bottom: 20px; padding: 15px; background-color: #ffffff; border: 1px solid #dee2e6;" : "")">
                    <h5 class="@(isEmailReceipt ? "email-section-title" : "section-title")" style="@(isEmailReceipt ? "color: #0d6efd; font-size: 18px; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;" : "")">Payment Details</h5>
                    <div class="info-table">
                        <div class="info-row">
                            <div class="info-label">Card Type:</div>
                            <div class="info-value">Credit/Debit Card</div>
                        </div>
                        <div class="info-row">
                            <div class="info-label">Card Number:</div>
                            <div class="info-value">**** **** **** @Model.CardNumber.Substring(Math.Max(0, Model.CardNumber.Length - 4))</div>
                        </div>
                    </div>
                </div>
            }

            <!-- Footer -->
            <div class="@(isEmailReceipt ? "email-receipt-footer" : "receipt-footer")">
                <p>For any questions about your order, please contact our customer service.</p>
                @if (!isEmailReceipt)
                {
                    <div class="action-buttons">
                        <a href="@Url.Action("Index", "MenuItem")" class="btn btn-primary">Continue Shopping</a>
                        <button onclick="window.print()" class="btn btn-outline-secondary">Print Receipt</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<style>
    /* Light/Dark Mode Compatible Styles */
    .receipt-container {
        max-width: 800px;
        margin: 0 auto;
    }
    
    .receipt-card {
        border: 1px solid var(--bs-border-color);
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        overflow: hidden;
    }
    
    .receipt-header {
        background-color: var(--bs-primary-bg-subtle);
        border-bottom: 1px solid var(--bs-border-color);
    }
    
    .receipt-logo {
        filter: var(--logo-filter, none);
    }
    
    .receipt-subtitle {
        color: var(--bs-secondary-color);
    }
    
    .receipt-body {
        padding: 1.5rem;
    }
    
    .section-title {
        font-size: 1.1rem;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid var(--bs-border-color);
    }
    
    .info-section {
        margin-bottom: 1.5rem;
    }
    
    .info-table {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .info-row {
        display: flex;
        flex-wrap: wrap;
    }
    
    .info-label {
        width: 40%;
        color: var(--bs-secondary-color);
        font-weight: 500;
    }
    
    .info-value {
        width: 60%;
    }
    
    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.5rem;
        background-color: var(--accent-green);
        color: var(--text-primary);
        border-radius: 4px;
        font-size: 0.875rem;
    }
    
    .instructions-box {
        padding: 1rem;
        background-color: var(--card-bg) !important;
        border-radius: 4px;
        border: 1px solid var(--bs-border-color);
    }
    
    .receipt-table {
        border-color: var(--bs-border-color);
    }
    
    .receipt-table thead {
        background-color: var(--bs-tertiary-bg);
    }
    
    .receipt-table th {
        border-bottom-width: 1px;
        font-weight: 600;
    }
    
    .item-name {
        font-weight: 500;
    }
    
    .personalizations-label {
        font-size: 0.875rem;
        color: var(--bs-secondary-color);
        margin-top: 0.5rem;
    }
    
    .personalizations-list {
        font-size: 0.875rem;
        padding-left: 1.5rem;
        margin-bottom: 0;
    }
    
    .total-row {
        background-color: var(--bs-tertiary-bg);
    }
    
    .total-amount {
        color: var(--bs-primary);
    }
    
    .receipt-footer {
        color: var(--bs-secondary-color);
    }
    
    /* Print Styles */
    @@media print {
        @@page {
            margin: 1cm;
            size: portrait;
        }
        
        body * { visibility: hidden !important; }
        .receipt-container, .receipt-container * { visibility: visible !important; }
        
        .receipt-container {
            position: absolute !important;
            left: 0 !important;
            top: 0 !important;
            width: 100% !important;
            max-width: 100% !important;
            margin: 0 !important;
            padding: 1cm !important;
        }
        
        .navbar, .sidebar, .footer, .btn, header, nav, aside, .theme-toggle, 
        .breadcrumb, .page-header, .alert, .user-info, .print-hide { 
            display: none !important; 
        }
        
        .receipt-card { 
            border: none !important; 
            box-shadow: none !important; 
        }
        
        .receipt-header {
            background-color: white !important;
            color: black !important;
            border-bottom: 1px solid #000 !important;
        }
        
        .section-title {
            color: black !important;
            border-bottom: 1px solid #000 !important;
        }
        
        .info-label {
            color: #555 !important;
        }
        
        .status-badge {
            border: 1px solid #198754 !important;
            background-color: white !important;
            color: #198754 !important;
        }
        
        .receipt-table {
            border-color: #000 !important;
        }
        
        .receipt-table th, .receipt-table td {
            border-color: #000 !important;
        }
        
        .instructions-box {
            border: 1px solid #000 !important;
            background-color: white !important;
        }
        
        .total-row {
            background-color: #f8f9fa !important;
        }

        .chart-header {
            background: linear-gradient(135deg, var(--bg-accent), var(--bg-secondary)) !important;
        }
    }
    
    /* Dark mode specific adjustments */
    @@media (prefers-color-scheme: dark) {
        .receipt-logo {
            --logo-filter: brightness(0) invert(1);
        }
    }

    /* Rating stars on receipt */
    .receipt-stars .star {
        font-size: 1.4rem;
        cursor: pointer;
        color: #d4aa46;
        margin-left: 2px;
    }
</style>

@if (!isEmailReceipt)
{
    <script>
        (function(){
            function getAntiForgeryToken() {
                var token = document.querySelector('#antiforgery-receipt input[name="__RequestVerificationToken"]');
                return token ? token.value : '';
            }
            function bindReceiptStars(){
                const groups = document.querySelectorAll('.receipt-stars');
                groups.forEach(group => {
                    const stars = group.querySelectorAll('.star');
                    stars.forEach(star => {
                        star.addEventListener('mouseover', function(){
                            const val = parseInt(this.getAttribute('data-value'));
                            stars.forEach((s, i) => s.textContent = (i < val ? '★' : '☆'));
                        });
                        star.addEventListener('mouseout', function(){
                            stars.forEach(s => s.textContent = '☆');
                        });
                        star.addEventListener('click', function(){
                            const val = this.getAttribute('data-value');
                            const menuItemId = group.getAttribute('data-menu-item-id');
                            const body = `menuItemId=${encodeURIComponent(menuItemId)}&value=${encodeURIComponent(val)}`;
                            fetch('/MenuItem/AddRating', {
                                method: 'POST',
                                headers: { 
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                    'RequestVerificationToken': getAntiForgeryToken()
                                },
                                body
                            }).then(r => {
                                if (r.status === 403) { alert('You can only rate items you have purchased.'); return null; }
                                return r ? r.json() : null;
                            }).then(data => {
                                if (!data) return;
                                // simple visual feedback
                                stars.forEach((s, i) => s.textContent = (i < val ? '★' : '☆'));
                            }).catch(() => alert('Failed to submit rating.'));
                        });
                    });
                });
            }
            document.addEventListener('DOMContentLoaded', bindReceiptStars);
        })();
    </script>
}
