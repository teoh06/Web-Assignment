@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="admin-dashboard">
    <div class="dashboard-header">
        <div class="welcome-section">
            <h1 class="dashboard-title"><i class="fas fa-tachometer-alt"></i> Admin Dashboard</h1>
            <p class="welcome-text">Welcome back, <strong>@User.Identity.Name</strong>!</p>
        </div>
        <div class="dashboard-actions">
            <button class="btn btn-primary dashboard-btn" onclick="showSection('users')">
                <i class="fas fa-users"></i> Manage Users
            </button>
            <button class="btn btn-info dashboard-btn" onclick="showSection('sales')">
                <i class="fas fa-chart-line"></i> Sales Summary
            </button>
        </div>
    </div>
<div class="row mb-4">
    <div class="col-md-6">
        <div class="card p-3 mb-3 chart-card-flex glowing">
            <h5 class="mb-3">Sales by Category</h5>
            <div class="chart-flex-row">
                <canvas id="salesPieChart" height="180" width="180"></canvas>
                <div id="salesPieLegend" class="chart-legend-list"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card p-3 mb-3 chart-card-flex glowing">
            <h5 class="mb-3">Top Selling Menu Items</h5>
            <div class="chart-flex-row">
                <canvas id="topMenuChart" height="180" width="180"></canvas>
                <div id="topMenuLegend" class="chart-legend-list"></div>
            </div>
        </div>
    </div>
</div>
    <div id="section-users" class="admin-section" style="display:none;"></div>
    <div id="section-orders" class="admin-section" style="display:none;"></div>
    <div id="section-sales" class="admin-section" style="display:none;"></div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
function showSection(section) {
    // Update active button
    document.querySelectorAll('.dashboard-btn').forEach(btn => btn.classList.remove('active'));
    event.target.classList.add('active');
    
    // Hide all sections
    document.querySelectorAll('.admin-section').forEach(s => {
        s.style.display = 'none';
        s.classList.remove('section-active');
    });
    
    // Show selected section with animation
    const targetSection = document.getElementById('section-' + section);
    targetSection.style.display = 'block';
    setTimeout(() => targetSection.classList.add('section-active'), 10);
    
    // Load section content
    if (section === 'users') loadSection('/Admin/ManageUsers', 'section-users');
    if (section === 'orders') loadSection('/Admin/ManageOrdersPartial', 'section-orders');
    if (section === 'sales') loadSection('/Admin/SalesSummary', 'section-sales');
}
function loadSection(url, target) {
    fetch(url)
        .then(r => r.text())
        .then(html => { document.getElementById(target).innerHTML = html; });
}
// Show sales by default
setTimeout(() => {
    document.querySelector('[onclick="showSection(\'sales\')"]').click();
}, 100);
const salesColors = [
    '#FF6B35', '#F7931E', '#4CAF50', '#E53E3E', '#4299E1', '#ED8936', '#48BB78', '#A0AEC0'
];
const menuColors = [
    '#4299E1', '#FF6B35', '#4CAF50', '#A0AEC0', '#F7931E', '#E53E3E', '#ED8936', '#48BB78'
];
// Chart: Sales by Category
fetch('/Admin/SalesChartData')
    .then(r => r.json())
    .then(data => {
        new Chart(document.getElementById('salesPieChart'), {
            type: 'pie',
            data: {
                labels: data.labels,
                datasets: [{
                    data: data.values,
                    backgroundColor: salesColors
                }]
            },
            options: {
                plugins: { legend: { display: false } },
                responsive: false,
                maintainAspectRatio: false
            }
        });
        // Custom legend
        let legendHtml = '';
        data.labels.forEach((label, i) => {
            legendHtml += `<div class='chart-legend-item'>`
                + `<span class='chart-legend-color' style='background:${salesColors[i % salesColors.length]}'></span>`
                + `<span class='chart-legend-label'>${label}</span>`
                + `<span class='chart-legend-value'>RM${data.values[i].toLocaleString(undefined, {minimumFractionDigits:2, maximumFractionDigits:2})}</span>`
                + `</div>`;
        });
        document.getElementById('salesPieLegend').innerHTML = legendHtml;
    });
// Chart: Top Selling Menu Items
fetch('/Admin/TopMenuChartData')
    .then(r => r.json())
    .then(data => {
        new Chart(document.getElementById('topMenuChart'), {
            type: 'doughnut',
            data: {
                labels: data.labels,
                datasets: [{
                    data: data.values,
                    backgroundColor: menuColors
                }]
            },
            options: {
                plugins: { legend: { display: false } },
                responsive: false,
                maintainAspectRatio: false
            }
        });
        // Custom legend
        let legendHtml = '';
        data.labels.forEach((label, i) => {
            legendHtml += `<div class='chart-legend-item'>`
                + `<span class='chart-legend-color' style='background:${menuColors[i % menuColors.length]}'></span>`
                + `<span class='chart-legend-label'>${label}</span>`
                + `<span class='chart-legend-value'>${data.values[i]}</span>`
                + `</div>`;
        });
        document.getElementById('topMenuLegend').innerHTML = legendHtml;
    });
</script>

