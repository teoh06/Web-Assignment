@model WebApplication2.Models.MenuItem
@{
    ViewBag.Title = "Add Menu Item";
    var categories = ViewBag.Categories as List<WebApplication2.Models.Category> ?? new List<WebApplication2.Models.Category>();
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-info">@TempData["Message"]</div>
}


<div class="container mt-4">
    <div class="row">

        <!-- Left: Bulk Upload -->
        <div class="col-md-5">
            <h3>Bulk Upload Menu Items (TXT)</h3>
            <div id="bulkUploadMessage"></div>

            <form id="dummyTokenForm" style="display:none;">
                @Html.AntiForgeryToken()
            </form>

            <div id="txtDropArea" class="drag-area">
                <input type="file" id="txtFileInput" name="txtFile" accept=".txt" style="display:none;" />
                <div id="txtPreviewContent">
                    <span id="txtDropText">Drag & drop a TXT file here, or click to select.</span>
                </div>
            </div>
            <small class="form-text text-muted">
                TXT format: Name, Description, Price, CategoryName, OptionalPhotoURL <br />
                Example 1: Cheeseburger, Juicy beef burger with cheese, 12.50, Main Course, https://example.com/images/cheeseburger.jpg <br />
                Example 2: Chocolate Cake, Rich chocolate cake slice, 7.00, Desserts, https://example.com/images/chocolatecake.jpg
            </small>
            <br />
            <br />
            <h3>Multiple Photo Upload</h3>
            <form id="photoUploadForm" method="post" enctype="multipart/form-data" asp-controller="MenuItem" asp-action="UploadPhotos">
                @Html.AntiForgeryToken()
                <div id="photoDropArea" class="drag-area">
                    <input type="file" id="photoInput" name="photos" accept="image/*" multiple hidden />
                    <div id="photoDropText">Drag & drop images here or click to select (Max size: 2MB each)</div>
                    <div id="photoPreview" class="preview-images"></div>
                </div>
                <br />
                <button type="submit" class="btn btn-secondary">Upload Photos</button>
            </form>
        </div>

        <!-- Middle: OR -->
        <div class="col-md-2 text-center d-flex align-items-center justify-content-center">
            <h4>OR</h4>
        </div>

        <!-- Right: Add New Menu Item -->
        <div class="col-md-5">
            <h3>Add New Menu Item</h3>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }

            <form asp-action="Create" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Name">Item Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Enter menu item name" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Description">Description</label>
                    <textarea asp-for="Description" class="form-control" placeholder="Enter item description" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Price">Price</label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input asp-for="Price" class="form-control" type="number" step="0.01" min="0.01" placeholder="0.00" />
                    </div>
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="CategoryId">Category</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="@(new SelectList(categories, "CategoryId", "Name"))">
                        <option value="">-- Select Category --</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="imageFile">Photo (Optional)</label>
                    <div id="drop-area" class="drag-area">
                        <input type="file" id="imageInput" name="imageFile" accept="image/*" class="file-input" />
                        <div id="preview-content">
                            <span id="drop-text">Drag & drop an image here, or click to select. (Max 2MB)</span>
                            <div id="preview-images" class="preview-images"></div>
                        </div>
                        <button type="button" id="deletePhoto" class="btn btn-danger btn-sm" style="display:none;">X</button>
                    </div>
                    <small class="form-text text-muted">Supported formats: JPEG, PNG, GIF, WebP. Maximum size: 2MB.</small>
                    <span asp-validation-for="PhotoURL" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary submit-btn">Create Item</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const photoDropArea = document.getElementById('photoDropArea');
            const photoInput = document.getElementById('photoInput');
            const photoPreview = document.getElementById('photoPreview');
            const photoDropText = document.getElementById('photoDropText');

            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                photoDropArea.addEventListener(eventName, e => {
                    e.preventDefault();
                    e.stopPropagation();
                });
            });

            ['dragenter', 'dragover'].forEach(eventName => photoDropArea.classList.add('active'));
            ['dragleave', 'drop'].forEach(eventName => photoDropArea.classList.remove('active'));

            photoDropArea.addEventListener('click', () => photoInput.click());

            photoInput.addEventListener('change', () => {
                updatePreviews(photoInput.files);
            });

            photoDropArea.addEventListener('drop', e => {
                const dt = new DataTransfer();
                for (const file of e.dataTransfer.files) {
                    if (file.type.startsWith('image/') && file.size <= 2 * 1024 * 1024) {
                        dt.items.add(file);
                    }
                }
                photoInput.files = dt.files;
                updatePreviews(photoInput.files);
            });

            function updatePreviews(files) {
                photoPreview.innerHTML = "";
                for (const file of files) {
                    const reader = new FileReader();
                    reader.onload = e => {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        photoPreview.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            }
        });
    </script>


    <style>
        .drag-area {
            border: 2px dashed #ccc;
            padding: 20px;
            text-align: center;
            cursor: pointer;    
            border-radius: 5px;
            transition: border-color 0.3s, background-color 0.3s;
            margin-bottom: 10px;
        }

            .drag-area.active {
                border-color: #007bff;
                background-color: #f8f9fa;
            }

        .preview-images img {
            max-width: 300px;
            max-height: 300px;
            width: auto;
            height: auto;
            object-fit: contain;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

    </style>
}
