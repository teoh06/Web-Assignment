@model WebApplication2.Models.MenuItem
@{
    ViewBag.Title = "Edit Menu Item";
    var categories = ViewBag.Categories as List<WebApplication2.Models.Category>;
}
<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="MenuItemId" />
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryId">Category</label>
        <select asp-for="CategoryId" class="form-control" asp-items="@(new SelectList(categories, "CategoryId", "Name"))"></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label class="form-label">Images (Drag & Drop or Select Multiple)</label>
        <div id="drop-area" class="drag-area position-relative mb-2" style="border:2px dashed #a1a1aa; border-radius:8px; min-height:150px; display:flex; align-items:center; justify-content:center; cursor:pointer;">
            <input type="file" id="imageInput" name="ImageFiles" accept="image/*" multiple style="position:absolute;inset:0;width:100%;height:100%;opacity:0;cursor:pointer;" />
            <div id="preview-content" style="text-align:center;width:100%;">
                <span id="drop-text" style="color:#888;">Drag & drop images here, or click to select.</span>
                <div id="preview-images" class="preview-images mt-2">
                    @if (Model.MenuItemImages != null && Model.MenuItemImages.Any())
                    {
                        foreach (var img in Model.MenuItemImages)
                        {
                            <img src="/images/@img.FileName" class="preview-image" style="max-width:120px;margin:4px;" alt="Menu Item Image" />
                        }
                    }
                </div>
            </div>
            <button type="button" id="deletePhotos" style="position:absolute;top:0.5rem;right:0.5rem;background:#ef4444;color:white;border:none;border-radius:50%;width:2rem;height:2rem;font-weight:bold;display:@(Model.MenuItemImages != null && Model.MenuItemImages.Any() ? "flex" : "none");align-items:center;justify-content:center;opacity:0.8;">&times;</button>
        </div>
        <div class="mt-2">Or enter image URL:</div>
        <input asp-for="PhotoURL" id="photoUrlInput" class="form-control mt-2" placeholder="Optional: Enter image URL if not uploading" />
        <span asp-validation-for="PhotoURL" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <a href="@Url.Action("Index")" class="btn btn-secondary">Back to List</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const dropArea = document.getElementById('drop-area');
            const imageInput = document.getElementById('imageInput');
            const dropText = document.getElementById('drop-text');
            const previewImages = document.getElementById('preview-images');
            const deleteBtn = document.getElementById('deletePhotos');
            const photoUrlInput = document.getElementById('photoUrlInput');
            let imageFiles = [];

            // Hide drop text if there are existing images
            if (previewImages.children.length > 0) {
                dropText.classList.add('hidden');
                deleteBtn.style.display = 'flex';
            }

            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, e => {
                    e.preventDefault();
                    e.stopPropagation();
                }, false);
            });

            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, () => dropArea.classList.add('active'), false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, () => dropArea.classList.remove('active'), false);
            });

            dropArea.addEventListener('drop', e => {
                const dt = e.dataTransfer;
                handleFiles(dt.files);
            });

            imageInput.addEventListener('change', (e) => {
                handleFiles(e.target.files);
            });

            deleteBtn.addEventListener('click', e => {
                e.stopPropagation();
                clearPreviews();
            });

            function handleFiles(files) {
                imageFiles = Array.from(files);
                if (imageFiles.length > 0) {
                    dropText.classList.add('hidden');
                    deleteBtn.style.display = 'flex';
                    imageFiles.forEach((file, idx) => {
                        const reader = new FileReader();
                        reader.onload = (e) => {
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            img.className = 'preview-image';
                            img.style.maxWidth = '120px';
                            img.style.margin = '4px';
                            previewImages.appendChild(img);
                        };
                        reader.readAsDataURL(file);
                    });
                    photoUrlInput.value = '';
                }
            }

            function clearPreviews() {
                imageInput.value = '';
                imageFiles = [];
                previewImages.innerHTML = '';
                dropText.classList.remove('hidden');
                deleteBtn.style.display = 'none';
            }
        });
    </script>
}
