@model WebApplication2.Models.MenuItemIndexVM
@using System.Globalization;

@{
    ViewBag.Title = "Menu";
    var isMember = User.IsInRole("Member");
    var isAdmin = User.IsInRole("Admin");
}


<div class="menu-container">
    @if (User.IsInRole("Admin"))
    {
        <p><a class="btn btn-success mb-3" asp-controller="MenuItem" asp-action="Create">+ Add New Product</a></p>
    }

    <!-- Filters here (search + category) -->
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Photo</th>
                <th>Name</th>
                <th>Category</th>
                <th>Price</th>
                @if (isAdmin || isMember)
                {
                    <th>Action</th>
                }
            </tr>
        </thead>
        <tbody id="menuItemsTableBody">
            @if (isAdmin)
            {
                @* The partial view _AdminMenuItemsTableRows would need to be updated to not display the Description column *@
                @await Html.PartialAsync("_AdminMenuItemsTableRows", Model.MenuItems)
            }
            else if (isMember)
            {
                @* The partial view _MemberMenuItemsTableRows would need to be updated to not display the Description column *@
                @await Html.PartialAsync("_MemberMenuItemsTableRows", Model.MenuItems)
            }
            else
            {
                @* The partial view _DefaultMenuItemsTableRows would need to be updated to not display the Description column *@
                @await Html.PartialAsync("_DefaultMenuItemsTableRows", Model.MenuItems)
            }
        </tbody>

    </table>
</div>


@section Scripts {
    <script>
        // The original script for adding to cart
        document.querySelector('.table').addEventListener('submit', function (event) {
            if (event.target.classList.contains('add-to-cart-form')) {
                event.preventDefault();

                const form = event.target;
                const formData = new FormData(form);
                const token = form.querySelector('input[name="__RequestVerificationToken"]') ?.value;

                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: new URLSearchParams([...formData])
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                    } else {
                        alert(data.message || 'Failed to add to cart.');
                    }
                })
                .catch(error => {
                    console.error('Error adding to cart:', error);
                    alert('Something went wrong.');
                });
            }
        });
    </script>
}
