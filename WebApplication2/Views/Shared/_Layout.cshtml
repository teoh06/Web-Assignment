@inject DB db
@{
    WebApplication2.Models.Member member = null;
    if (User.IsInRole("Member"))
    {
        member = db.Members.Find(User.Identity!.Name);
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link rel="shortcut icon" href="/images/quickbite.png">

    <!-- Immediate theme application to prevent flashing -->
    <script>
        (function () {
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme === 'dark') {
                document.documentElement.classList.add('dark-theme');
            }
        })();
    </script>

    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/app.css" asp-append-version="true">
    @RenderSection("head", false)

    <!-- Google Translate -->
    <script type="text/javascript">
        function googleTranslateElementInit() {
            new google.translate.TranslateElement({
                pageLanguage: 'en',
                includedLanguages: 'en,ms,zh-CN',
                layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
                autoDisplay: false
            }, 'google_translate_element');
            
            // Hide the Google Translate banner
            document.cookie = 'googtrans=/en/en; path=/; domain=' + location.hostname;
        }

        // Add event listener to remove the Google Translate banner
        window.addEventListener('load', function() {
            var bannerFrame = document.getElementsByClassName('goog-te-banner-frame')[0];
            if (bannerFrame) {
                bannerFrame.style.display = 'none';
            }
            document.body.style.top = '0px';
            
            // Create a style element to override Google Translate styles
            var style = document.createElement('style');
            style.textContent = `
                .goog-te-banner-frame { display: none !important; }
                body { top: 0 !important; }
                .goog-te-gadget-simple { 
                    background-color: var(--bg-secondary) !important;
                    border: 1px solid var(--border-color) !important;
                    padding: 5px !important;
                    border-radius: 4px !important;
                }
                .goog-te-gadget-simple span { color: var(--text-primary) !important; }
            `;
            document.head.appendChild(style);
        });
    </script>

    <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
</head>

<body>
    <div class="info">@Html.Raw(TempData["Info"])</div>

    <header>
        <!-- Logo -->
        <h1 style="font-family: 'Brush Script MT', cursive; font-style: italic;">
            <a href="/" style="text-decoration: none; color: inherit; margin-left: 8px;">QuickBite</a>
        </h1>

        <!-- Google Translate Widget moved to header -->
        <div id="google_translate_element" style="margin-left: auto; margin-right: 20px;"></div>

        @* User name and role *@
        @if (User.Identity!.IsAuthenticated)
        {
            <div>
                @(User.IsInRole("Member") && member != null ? member.Name : User.Identity?.Name ?? "Member") |
                @(User.IsInRole("Admin") ? "Admin" : "")
                @(User.IsInRole("Member") ? "Member" : "")
            </div>
        }
        @* Member profile photo *@
        @if (User.IsInRole("Member") && member != null && !string.IsNullOrEmpty(member.PhotoURL))
        {
            <img src="/photos/@member.PhotoURL" />
        }
    </header>

    <nav>
        <a href="/">Home</a>

        @if (User.IsInRole("Member") || !User.IsInRole("Admin"))
        {
            <a href="/MenuItem">Menu</a>
        }

        @if (User.IsInRole("Member"))
        {
            <a href="/Cart">Cart</a>
            <a href="/Cart/History">My Orders</a>
        }
        @if (User.IsInRole("Admin"))
        {
            <a href="/MenuItem/Index">Manage Menu Items</a>
            <a href="/Category/Index">Manage Categories</a>
            <a class="nav-link" asp-controller="Admin"
               style="display:inline;
                    background: var(--nav-button-bg);
                    color: var(--nav-button-text);
                    text-decoration: none;
                    padding: 5px 10px;
                    white-space: nowrap;" asp-action="Index">Admin Panel</a>
        }
        <div></div>

        @* Theme Toggle Button *@
        <button id="themeToggle" class="theme-toggle">
            <span class="theme-toggle-icon">🌙</span>
            <span class="theme-toggle-text">Dark</span>
        </button>

        @if (User.Identity!.IsAuthenticated)
        {
            <form asp-controller="Account" asp-action="Logout" method="post" onsubmit="return confirmLogout();">
                <button type="submit" class="default-button" style="border: none; line-height: 1.6;">Logout</button>
            </form>

            <a href="/Account/UpdatePassword">Update Password</a>
        }
        else
        {
            <a href="/Account/Login">Login</a>
            <a href="/Account/Register">Register</a>
            <a href="/Account/ResetPassword">Reset Password</a>
        }
        @if (User.IsInRole("Member"))   
        {
            <a href="/Account/UpdateProfile">Update Profile</a>
        }
    </nav>

    <main>
        <h1>@ViewBag.Title</h1>
        @RenderBody()
    </main>

    <footer>
        <div>
            Developed by <b>QuickBite</b> &middot;
            Copyrighted &copy; @DateTime.Today.Year &middot;
            <a href="/Home/Privacy" style="text-decoration: none; color: var(--text-primary);">Privacy Policy</a>
        </div>
    </footer>

    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery.unobtrusive-ajax.min.js"></script>
    <script src="/js/jquery.validate.min.js"></script>
    <script src="/js/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="/js/app.js" asp-append-version="true"></script>

    <script>
        function confirmLogout() {
            return confirm("Are you sure you want to logout?");
        }

        document.addEventListener('DOMContentLoaded', function() {
            const themeToggle = document.getElementById('themeToggle');
            const themeToggleIcon = themeToggle.querySelector('.theme-toggle-icon');
            const themeToggleText = themeToggle.querySelector('.theme-toggle-text');
            
            // Check for saved theme preference or default to light mode
            const currentTheme = localStorage.getItem('theme') || 'light';
            
            // Apply the current theme
            applyTheme(currentTheme);
            
            // Add click event listener to theme toggle button
            themeToggle.addEventListener('click', function() {
                const isDarkTheme = document.documentElement.classList.contains('dark-theme');
                const newTheme = isDarkTheme ? 'light' : 'dark';
                applyTheme(newTheme);
                localStorage.setItem('theme', newTheme);
            });
            
            function applyTheme(theme) {
                if (theme === 'dark') {
                    document.documentElement.classList.add('dark-theme');
                    themeToggleIcon.textContent = '☀️';
                    themeToggleText.textContent = 'Light';
                } else {
                    document.documentElement.classList.remove('dark-theme');
                    themeToggleIcon.textContent = '🌙';
                    themeToggleText.textContent = 'Dark';
                }
                
                // Force update for any dynamically loaded content
                updateDynamicElements();
            }
            
            function updateDynamicElements() {
                // Force update card styles
                document.querySelectorAll('.card').forEach(card => {
                    card.style.display = 'none';
                    card.offsetHeight; // Trigger reflow
                    card.style.display = '';
                });
            }
        });
    </script>

    @RenderSection("foot", false)
    @RenderSection("Scripts", required: false)
</body>
</html>
