@inject DB db
@{
    WebApplication2.Models.Member member = null;
    if (User.IsInRole("Member"))
    {
        member = db.Members.Find(User.Identity!.Name);
    }
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show auto-dismiss" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["EditMessage"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @Html.Raw(TempData["EditMessage"])
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link rel="shortcut icon" href="/images/quickbite.png">

    <!-- Immediate theme application to prevent flashing -->
    <script>
        (function () {
            const themeCookie = document.cookie.split('; ').find(row => row.startsWith('theme='));
            const savedTheme = themeCookie ? themeCookie.split('=')[1] : null;
            if (savedTheme === 'dark') {
                document.documentElement.classList.add('dark-theme');
            }
        })();
    </script>

    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/app.css" asp-append-version="true">
    @RenderSection("head", false)

</head>

<body>

    <div class="info">@Html.Raw(TempData["Info"])</div>

    <header>
        <!-- Logo -->
        <h1 style="font-family: 'Brush Script MT', cursive; font-style: italic;">
            <a href="/" style="text-decoration: none; color: inherit; margin-left: 8px;">QuickBite</a>
        </h1>


        @* User name and role *@
        @if (User.Identity!.IsAuthenticated)
        {
            <div>
                @(User.IsInRole("Member") && member != null ? member.Name : User.Identity?.Name ?? "Member") |
                @(User.IsInRole("Admin") ? "Admin" : "")
                @(User.IsInRole("Member") ? "Member" : "")
            </div>
        }
        @* Member profile photo *@
        @if (User.IsInRole("Member") && member != null && !string.IsNullOrEmpty(member.PhotoURL))
        {
            <img src="/photos/@member.PhotoURL" />
        }
    </header>

    <nav>
        <a href="/">Home</a>

        @if (User.IsInRole("Member") || !User.IsInRole("Admin"))
        {
            <a href="/MenuItem">Menu</a>
        }

        @if (User.IsInRole("Member"))
        {
            <a href="/Cart">Cart</a>
            <a href="/Cart/History">My Orders</a>
            <a href="/Cart/Track">Track Order</a>
        }

        @if (User.IsInRole("Admin"))
        {
            <a href="/MenuItem/Index">Manage Menu Items</a>
            <a href="/Category/Index">Manage Categories</a>
            <a class="nav-link default-button" asp-controller="Admin" asp-action="Index">Admin Panel</a>
        }
        <div></div>

        @* Theme Toggle Button *@
        <button id="themeToggle" class="theme-toggle default-button" style="font-size: 20px; line-height: 0;">
            <span class="theme-toggle-icon">🌙</span>
            <span class="theme-toggle-text"></span>
        </button>

        @if (User.Identity!.IsAuthenticated)
        {
            <form asp-controller="Account" asp-action="Logout" method="post" onsubmit="return confirmLogout();">
                <button type="submit" class="default-button" style="border: none; line-height: 1.8;">Logout</button>
            </form>

            <a href="/Account/UpdatePassword">Update Password</a>
        }
        else
        {
            <a href="/Account/Login">Login</a>
            <a href="/Account/Register">Register</a>
            <a href="/Account/ResetPassword">Reset Password</a>
        }
        @if (User.IsInRole("Member"))
        {
            <a href="/Account/UpdateProfile">Update Profile</a>
        }
    </nav>

    <main>
        <h1>@ViewBag.Title</h1>
        @RenderBody()
    </main>

    <footer>
        <div>
            Developed by <b>QuickBite</b> &middot;
            Copyrighted &copy; @DateTime.Today.Year &middot;
            <a href="/Home/Privacy" style="text-decoration: none; color: var(--text-primary);">Privacy Policy</a>
        </div>
    </footer>

    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery.unobtrusive-ajax.min.js"></script>
    <script src="/js/jquery.validate.min.js"></script>
    <script src="/js/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/app.js" asp-append-version="true"></script>

    <script>
        function confirmLogout() {
            return confirm("Are you sure you want to logout?");
        }

        // Auto-dismiss success messages after 4 seconds
        document.addEventListener('DOMContentLoaded', function () {
            const autoDissmissAlerts = document.querySelectorAll('.alert.auto-dismiss');
            autoDissmissAlerts.forEach(function(alert) {
                setTimeout(function() {
                    // Use Bootstrap's alert close method
                    if (typeof bootstrap !== 'undefined' && bootstrap.Alert) {
                        const bootstrapAlert = bootstrap.Alert.getOrCreateInstance(alert);
                        bootstrapAlert.close();
                    } else {
                        // Fallback: manually fade out and remove
                        alert.classList.remove('show');
                        setTimeout(() => alert.remove(), 150);
                    }
                }, 4000); // 4 seconds
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const themeToggle = document.getElementById('themeToggle');
            const themeToggleIcon = themeToggle.querySelector('.theme-toggle-icon');
            const themeToggleText = themeToggle.querySelector('.theme-toggle-text');

            // Helper to get cookie
            function getCookie(name) {
                const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                return match ? match[2] : null;
            }

            // Helper to set cookie
            function setCookie(name, value, days = 365) {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;
            }

            // Apply the theme from cookie or default to light
            const savedTheme = getCookie("theme") || "light";
            applyTheme(savedTheme);

            themeToggle.addEventListener('click', function () {
                const isDarkTheme = document.documentElement.classList.contains('dark-theme');
                const newTheme = isDarkTheme ? "light" : "dark";
                applyTheme(newTheme);
                setCookie("theme", newTheme);
            });

            function applyTheme(theme) {
                if (theme === 'dark') {
                    document.documentElement.classList.add('dark-theme');
                    themeToggleIcon.textContent = '☀️';
                    themeToggleText.textContent = '';
                } else {
                    document.documentElement.classList.remove('dark-theme');
                    themeToggleIcon.textContent = '🌙';
                    themeToggleText.textContent = '';
                }

                // Optional: trigger visual refresh for dynamic content
                document.querySelectorAll('.card').forEach(card => {
                    card.style.display = 'none';
                    card.offsetHeight; // trigger reflow
                    card.style.display = '';
                });
            }
        });
    </script>


    @RenderSection("foot", false)
    @RenderSection("Scripts", required: false)
</body>
</html>