@model WebApplication2.Models.Category
@using WebApplication2.Models;
@{
    ViewBag.Title = "Category Details - " + Model.Name;
    var db = Context.RequestServices.GetService(typeof(DB)) as DB;
    var options = db.PersonalizationOptions.Where(o => o.CategoryId == Model.CategoryId).OrderBy(o => o.Name).ToList();
    var menuItems = db.MenuItems.Where(m => m.CategoryId == Model.CategoryId).ToList();
    var totalOrders = db.Orders.SelectMany(o => o.OrderItems)
                                .Where(oi => oi.MenuItem.CategoryId == Model.CategoryId)
                                .Count();
}
<main>
    <div class="category-details-form">
        <div class="details-header">
            <span class="details-icon"><i class="fas fa-utensils"></i></span>
            <span class="details-title">@Model.Name</span>
            <div class="details-actions">
                <a asp-action="Edit" asp-route-id="@Model.CategoryId" class="btn btn-primary btn-lg"> <i class="fas fa-edit me-2"></i> Edit Category </a>
                <a asp-action="Index" class="btn btn-secondary btn-lg"> <i class="fas fa-list me-2"></i> All Categories </a>
            </div>
        </div>
        <div class="details-content-grid">
            <div class="details-card">
                <div class="details-card-header"><i class="fas fa-info-circle me-2"></i> Basic Information</div>
                <div class="details-card-body">
                    <div class="mb-2"><strong>Category ID:</strong> @Model.CategoryId</div>
                    <div class="mb-2"><strong>Name:</strong> @Model.Name</div>
                    <div class="mb-2"><strong>Created Date:</strong> @DateTime.Now.AddDays(-30).ToString("MMM dd, yyyy") <small class="text-muted">(Approx.)</small></div>
                    <div class="mb-2"><strong>Status:</strong> <span class="badge bg-success">Active</span></div>
                </div>
                <div class="details-card-header mt-4"><i class="fas fa-sliders-h me-2"></i> Personalization Options <span class="badge bg-primary ms-2">@options.Count</span></div>
                <div class="details-card-body">
                    @if (options.Any()) {
                        <div class="d-flex flex-wrap gap-2 mb-2">
                            @foreach (var option in options) {
                                <span class="badge bg-primary" style="font-size:1em;"><i class="fas fa-check-circle me-1"></i>@option.Name</span>
                            }
                        </div>
                    } else {
                        <div class="text-muted">No personalization options yet.</div>
                    }
                    <a asp-action="Edit" asp-route-id="@Model.CategoryId" class="btn btn-outline-primary btn-sm mt-2"><i class="fas fa-cogs me-1"></i> Manage Options</a>
                </div>
            </div>
            <div class="details-card">
                <div class="details-card-header"><i class="fas fa-utensils me-2"></i> Menu Items <span class="badge bg-primary ms-2">@menuItems.Count</span></div>
                <div class="details-card-body">
                    @if (menuItems.Any()) {
                        <div class="menu-items-scroll">
                            @foreach (var item in menuItems) {
                                <div class="menu-item-card formal-menu-card">
                                    <div class="item-image">
                                        @if (!string.IsNullOrEmpty(item.PhotoURL)) {
                                            <img src="@(item.PhotoURL.StartsWith("http") ? item.PhotoURL : "/images/" + item.PhotoURL)" alt="@item.Name" />
                                        } else {
                                            <div class="no-image"><i class="fas fa-image"></i></div>
                                        }
                                    </div>
                                    <div class="item-info">
                                        <h3 class="item-name">@item.Name</h3>
                                        <p class="item-description">@(item.Description.Length > 80 ? item.Description.Substring(0, 80) + "..." : item.Description)</p>
                                        <div class="item-price in-the-middle">@item.Price.ToString("C", new System.Globalization.CultureInfo("en-MY"))</div>
                                        <a asp-controller="MenuItem" asp-action="Details" asp-route-id="@item.MenuItemId" class="btn btn-sm btn-outline-primary"><i class="fas fa-eye me-1"></i> View Details</a>
                                    </div>
                                </div>
                            }
                        </div>
                    } else {
                        <div class="empty-state">
                            <i class="fas fa-utensils empty-icon"></i>
                            <h3 class="empty-title">No Menu Items Yet</h3>
                            <p class="empty-description">This category doesn't have any menu items. Start adding delicious items to showcase in this category!</p>
                            <a asp-controller="MenuItem" asp-action="Create" class="btn btn-primary"><i class="fas fa-plus me-2"></i> Add First Menu Item</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <style>
        .category-details-form {
            border-radius: 16px;
            padding: 32px;
            box-shadow: 0 4px 24px #0002;
            margin: 40px auto;
            max-width: 1200px;
        }
        .details-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 32px;
        }
        .details-icon {
            font-size: 2.5rem;
            color: var(--primary-brand);
            margin-right: 16px;
        }
        .details-title {
            font-family: 'Victor Mono', monospace;
            font-size: 2.2rem;
            color: var(--primary-brand);
            flex: 1;
        }
        .details-actions {
            display: flex;
            gap: 16px;
        }
        .details-content-grid {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 32px;
        }
        .details-card {
            border-radius: 10px;
            box-shadow: 0 2px 8px #0003;
            padding: 24px;
            border: 1px solid #222a36;
            margin-bottom: 24px;
        }
        .details-card-header {
            font-size: 1.4rem;
            font-family: 'Victor Mono', monospace;
            margin-bottom: 18px;
            display: flex;
            align-items: center;
            gap: 8px;
            border-bottom: 1px solid #222a36;
            padding-bottom: 8px;
        }
        .details-card-body {
            margin-bottom: 12px;
        }
        .menu-items-scroll {
            display: flex;
            gap: 24px;
            overflow-x: auto;
            padding-bottom: 8px;
        }
        .formal-menu-card {
            border-radius: 12px;
            box-shadow: 0 2px 8px #0003;
            min-width: 220px;
            max-width: 260px;
            flex: 0 0 auto;
            padding: 18px 12px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .formal-menu-card .item-image {
            width: 180px;
            height: 140px;
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .formal-menu-card .item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 8px;
        }
        .formal-menu-card .item-info {
            text-align: center;
        }
        .formal-menu-card .item-name {
            font-size: 1.1rem;
            font-weight: bold;
            margin-bottom: 6px;
        }
        .formal-menu-card .item-description {
            font-size: 0.95rem;
            margin-bottom: 8px;
            min-height: 48px;
        }
        .formal-menu-card .item-price {
            font-size: 1.05rem;
            color: var(--accent-green);
            font-weight: bold;
            margin-bottom: 8px;
        }
        .formal-menu-card .btn-outline-primary {
            border-radius: 6px;
            padding: 6px 14px;
            font-size: 0.95rem;
        }
    </style>
</main>
