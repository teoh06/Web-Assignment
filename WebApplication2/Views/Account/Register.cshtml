@model RegisterVM

@{
    ViewBag.Title = "Account | Register";
    var siteKey = ViewBag.SiteKey as string;
}

<div class="auth-container">
    <div class="auth-card">
        <!-- Header Section -->
        <div class="auth-header">
            <div class="auth-logo">
                <i class="fas fa-user-plus"></i>
            </div>
            <h1 class="auth-title">Join QuickBite</h1>
            <p class="auth-subtitle">Create your account to get started</p>
        </div>

        <!-- Form Section -->
        <form asp-action="Register" method="post" enctype="multipart/form-data" class="auth-form">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="auth-validation-summary"></div>

            <!-- Email Field -->
            <div class="form-group">
                <label asp-for="Email" class="form-label">
                    <i class="fas fa-envelope"></i>
                    Email Address
                </label>
                <input asp-for="Email" class="form-input" placeholder="Enter your email" autofocus>
                <span asp-validation-for="Email" class="field-validation"></span>
            </div>

            <!-- Full Name Field -->
            <div class="form-group">
                <label asp-for="Name" class="form-label">
                    <i class="fas fa-user"></i>
                    Full Name
                </label>
                <input asp-for="Name" class="form-input" placeholder="Enter your full name">
                <span asp-validation-for="Name" class="field-validation"></span>
            </div>

            <!-- Password Field -->
            <div class="form-group">
                <label asp-for="Password" class="form-label">
                    <i class="fas fa-lock"></i>
                    Password
                </label>
                <div class="password-field">
                    <input asp-for="Password" class="form-input" placeholder="Create a password" autocomplete="new-password" id="registerPasswordInput">
                    <span class="password-toggle" onclick="togglePasswordVisibility('registerPasswordInput', this)">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
                <span asp-validation-for="Password" class="field-validation"></span>
            </div>

            <!-- Confirm Password Field -->
            <div class="form-group">
                <label asp-for="Confirm" class="form-label">
                    <i class="fas fa-check-circle"></i>
                    Confirm Password
                </label>
                <div class="password-field">
                    <input asp-for="Confirm" class="form-input" placeholder="Confirm your password" autocomplete="new-password" id="confirmPasswordInput">
                    <span class="password-toggle" onclick="togglePasswordVisibility('confirmPasswordInput', this)">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
                <span asp-validation-for="Confirm" class="field-validation"></span>
            </div>

            <!-- Profile Picture Field -->
            <div class="form-group">
                <label asp-for="ProfilePicture" class="form-label">
                    <i class="fas fa-camera"></i>
                    Profile Picture (Optional)
                </label>
                <div class="file-upload-wrapper">
                    <label class="file-upload">
                        <input asp-for="ProfilePicture" accept="image/jpeg, image/png, image/jpg, image/webp, image/gif, image/bmp, image/svg+xml, image/tiff" hidden>
                        <div class="upload-content">
                            <div class="upload-icon">
                                <i class="fas fa-cloud-upload-alt"></i>
                            </div>
                            <div class="upload-text">
                                <strong>Choose a photo</strong>
                                <span>or drag and drop</span>
                            </div>
                        </div>
                        <img src="/images/photo.jpg" class="upload-preview" style="display: none;">
                    </label>
                </div>
                <span asp-validation-for="ProfilePicture" class="field-validation"></span>
            </div>

            <!-- reCAPTCHA -->
            @if (!string.IsNullOrEmpty(siteKey))
            {
                <div class="form-group recaptcha-group">
                    <div class="g-recaptcha" data-sitekey="@siteKey"></div>
                </div>
            }

            <!-- Submit Buttons -->
            <div class="form-actions">
                <button type="submit" class="btn-primary">
                    <i class="fas fa-user-plus"></i>
                    Create Account
                </button>
                <button type="reset" class="btn-secondary">
                    <i class="fas fa-undo"></i>
                    Clear Form
                </button>
            </div>
        </form>

        <!-- Footer Links -->
        <div class="auth-footer">
            <p class="auth-links">
                Already have an account? <a href="/Account/Login" class="auth-link">Sign In</a>
            </p>
        </div>
    </div>
</div>

@section Scripts {
    @if (!string.IsNullOrEmpty(siteKey))
    {
        <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    }
    <script>
        // Password visibility toggle
        function togglePasswordVisibility(inputId, iconSpan) {
            const passwordInput = document.getElementById(inputId);
            const icon = iconSpan.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Profile picture upload handling
        document.addEventListener('DOMContentLoaded', () => {
            const fileInput = document.querySelector('input[type="file"]');
            const fileUpload = document.querySelector('.file-upload');
            const preview = document.querySelector('.upload-preview');
            const uploadContent = document.querySelector('.upload-content');

            function handleFile(file) {
                if (!file.type.startsWith('image/')) {
                    alert('Please upload an image file.');
                    return;
                }
                if (file.size > 2 * 1024 * 1024) {
                    alert('File size should not exceed 2MB.');
                    return;
                }

                const reader = new FileReader();
                reader.onload = (e) => {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                    uploadContent.style.display = 'none';
                };
                reader.readAsDataURL(file);
            }

            // Handle file input change
            fileInput.addEventListener('change', (e) => {
                const file = e.target.files[0];
                if (file) handleFile(file);
            });

            // Handle drag and drop
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                fileUpload.addEventListener(eventName, (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                });
            });

            ['dragenter', 'dragover'].forEach(eventName => {
                fileUpload.addEventListener(eventName, () => {
                    fileUpload.classList.add('drag-active');
                });
            });

            ['dragleave', 'drop'].forEach(eventName => {
                fileUpload.addEventListener(eventName, () => {
                    fileUpload.classList.remove('drag-active');
                });
            });

            fileUpload.addEventListener('drop', (e) => {
                const file = e.dataTransfer.files[0];
                if (file) handleFile(file);
            });

            // Add click to remove image
            preview.addEventListener('click', () => {
                preview.style.display = 'none';
                uploadContent.style.display = 'block';
                fileInput.value = '';
            });
        });
    </script>

    <style>
        .file-upload {
            border: 2px dashed #ccc;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .file-upload.drag-active {
            border-color: var(--primary-brand);
            background-color: rgba(74, 108, 247, 0.05);
        }

        .upload-preview {
            max-width: 100%;
            max-height: 200px;
            border-radius: 8px;
            cursor: pointer;
        }

        .upload-preview:hover {
            opacity: 0.8;
        }

        .upload-content {
            padding: 20px;
        }

        .upload-icon {
            font-size: 2em;
            color: #666;
            margin-bottom: 10px;
        }

        .upload-text {
            color: #666;
        }

        .upload-text strong {
            display: block;
            margin-bottom: 5px;
        }
    </style>
}
